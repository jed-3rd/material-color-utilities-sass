/*
 * @license
 * Copyright 2023 Jed
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * 
 * Based on the work of Material Foundation.
 * 
 * https://github.com/material-foundation/material-color-utilities
*/

@use 'sass:math';

/// 
/// Color science utilities.
/// 
/// Utility methods for color science constants and color space
/// conversions that aren't HCT or CAM16.
/// 

/// Returns the standard white point; white on a sunny day.
@function whitePointD65() {
    @return 95.047, 100.0, 108.883;
}

@function labInvf($ft) {
    $e: math.div(216.0, 24389.0);
    $kappa: math.div(24389.0, 27.0);
    $ft3: $ft * $ft * $ft;
    @if $ft3 > $e {
        @return $ft3;
    } @else {
        @return math.div((116 * $ft - 16), $kappa);
    }
}

/// Converts an L* value to a Y value.
/// 
/// L* in L*a*b* and Y in XYZ measure the same quantity, luminance.
/// 
/// L* measures perceptual luminance, a linear scale. Y in XYZ
/// measures relative luminance, a logarithmic scale.
@function yFromLstar($lstar) {
    @return 100.0 * labInvf(math.div(($lstar + 16.0), 116.0));
}
