/*
 * @license
 * Copyright 2023 Jed
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * 
 * Based on the work of Material Foundation.
 * 
 * https://github.com/material-foundation/material-color-utilities
*/

@use '../utils/utils' as utils;
@use './viewing_conditions' as viewingConditions;
@use './cam16' as cam16;

/// 
/// A color system built using CAM16 hue and chroma, and L* from L*a*b*.
/// 
/// Using L* creates a link between the color system, contrast, and thus
/// accessibility. Contrast ratio depends on relative luminance, or Y in the XYZ
/// color space. L*, or perceptual luminance can be calculated from Y.
/// 
/// Unlike Y, L* is linear to human perception, allowing trivial creation of
/// accurate color tones.
/// 
/// Unlike contrast ratio, measuring contrast in L* is linear, and simple to
/// calculate. A difference of 40 in HCT tone guarantees a contrast ratio >= 3.0,
/// and a difference of 50 guarantees a contrast ratio >= 4.5.
/// 

///
/// HCT, hue, chroma, and tone. A color system that provides a perceptually
/// accurate color measurement system that can also accurately render what colors
/// will appear as in different lighting environments.
/// 

///
/// Parameter Hue: 0 <= hue < 360; invalid values are corrected.
/// Parameter Chroma: 0 <= chroma < ?; Informally, colorfulness. The color returned
///                   may be lower than the requested chroma. Chroma has a different
///                   maximum for any given hue and tone.
/// Parameter Tone: 0 <= tone <= 100; invalid values are corrected.
/// Return HCT: representation of a color in default viewing conditions.
/// 

@function from($hue, $chroma, $tone) {
    @return make();
}

@function make() {

}